Getting speaches...

13
['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
Creating bow vectors...

Creating tfidf vectors...

Applying LSA on bow vectors...

Applying LSA on tfidf vectors...

Running kmeans ...

k_means:4 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=4, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[2 0 2 1 2 0 2 3 0 0 0 2 0]
k_means: 2 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=2, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[1 0 1 1 1 0 1 0 0 0 0 1 0]
k_means:6 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=6, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[4 0 0 2 4 0 1 3 5 5 0 4 0]
k_means:4 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=4, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[3 1 3 2 3 1 3 0 1 1 1 3 1]
k_means: 2 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=2, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[0 0 0 0 0 0 0 1 0 0 0 0 0]
k_means:6 clusters KMeans(copy_x=True, init='k-means++', max_iter=300, n_clusters=6, n_init=10,
    n_jobs=1, precompute_distances='auto', random_state=None, tol=0.0001,
    verbose=0) 

['RUBIO', 'KASICH', 'SANTORUM', 'FIORINA', 'BUSH', 'HUCKABEE', 'CRUZ', 'PAUL', 'SANDERS', 'CLINTON', 'TRUMP', 'CHRISTIE', 'CARSON']
[1 0 0 4 1 0 5 2 3 3 0 1 0]
